<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Shooting!!!</title>
    <link>https://www.shutingrz.com/post/</link>
    <description>Recent content in Posts on Shooting!!!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <copyright>shutingrz - All rights reserved.</copyright>
    <lastBuildDate>Mon, 07 Mar 2022 03:00:00 +0900</lastBuildDate><atom:link href="https://www.shutingrz.com/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>フォールトインジェクションとは？電圧グリッチでnRF52のプロテクションを破って学ぶ</title>
      <link>https://www.shutingrz.com/post/voltage-fault-injection-nrf52/</link>
      <pubDate>Mon, 07 Mar 2022 03:00:00 +0900</pubDate>
      
      <guid>https://www.shutingrz.com/post/voltage-fault-injection-nrf52/</guid>
      <description>しゅーと(@shutingrz)です。久しぶりの投稿です。 皆さんはフォールトインジェクション(Fault Injection)という言葉を聞い</description>
    </item>
    
    <item>
      <title>検知回避の手法 - PowerShell</title>
      <link>https://www.shutingrz.com/post/avoid-detection-powershell/</link>
      <pubDate>Sat, 10 Apr 2021 00:00:00 +0900</pubDate>
      
      <guid>https://www.shutingrz.com/post/avoid-detection-powershell/</guid>
      <description>しゅーと(@shutingrz)です。 前回の記事では実行ファイルにおいて Windows Defender のリアルタイムスキャン、クラウド保護の検知回避を試みました。 まだ</description>
    </item>
    
    <item>
      <title>検知回避の手法 - 実行ファイル</title>
      <link>https://www.shutingrz.com/post/avoid-detection-dotnet/</link>
      <pubDate>Thu, 08 Apr 2021 00:00:07 +0900</pubDate>
      
      <guid>https://www.shutingrz.com/post/avoid-detection-dotnet/</guid>
      <description>しゅーとです。今回は実行ファイル、特に.NETプログラムの検知回避に関する記事です。 ペネトレーションテストに携わりたい方だけではなく、Blu</description>
    </item>
    
    <item>
      <title>GadgetToJScript を利用した Office VBA のAMSI バイパスと原理</title>
      <link>https://www.shutingrz.com/post/explore-dotnet-serialize-g2js/</link>
      <pubDate>Mon, 16 Nov 2020 18:41:10 +0900</pubDate>
      
      <guid>https://www.shutingrz.com/post/explore-dotnet-serialize-g2js/</guid>
      <description>しゅーとです。普段は IoT 機器のリバースエンジニアリングを生業としていますが、最近は流行に乗ってRed Teaming の研究もしています。 今回は WSH (vbs, js, hta) と Office マ</description>
    </item>
    
    <item>
      <title>コインチェックのドメインハイジャックの手法を調査した</title>
      <link>https://www.shutingrz.com/post/dig-coincheck/</link>
      <pubDate>Thu, 04 Jun 2020 20:00:00 +0900</pubDate>
      
      <guid>https://www.shutingrz.com/post/dig-coincheck/</guid>
      <description>しゅーとです。 コインチェックは 6月2日 、ドメインレジストラである「お名前.com」の管理アカウントに不正にアクセスされ、ドメイン登録情報が変</description>
    </item>
    
    <item>
      <title>ラテラルムーブメントとそれを阻むUACに関する調査</title>
      <link>https://www.shutingrz.com/post/ad_remote-uac/</link>
      <pubDate>Mon, 24 Feb 2020 01:18:40 +0900</pubDate>
      
      <guid>https://www.shutingrz.com/post/ad_remote-uac/</guid>
      <description>ラテラルムーブメントを阻む、通称「リモートUAC」に関して調査しました。 結果はまあそうだよねという感じになってしまいましたが、ここにメモしま</description>
    </item>
    
    <item>
      <title>アクアのスピードメーターを解析してPS3のコントローラで動かす</title>
      <link>https://www.shutingrz.com/post/aqua-meter-hack/</link>
      <pubDate>Thu, 03 Oct 2019 04:34:00 +0900</pubDate>
      
      <guid>https://www.shutingrz.com/post/aqua-meter-hack/</guid>
      <description>しゅーとです。 リアルECUシリーズ第二作目。 ヤフオクにてアクアのコンビネーションメータを手に入れたので色々いじってみた。 要約 スピードメーター</description>
    </item>
    
    <item>
      <title>リアルECUを召喚して本物のCAN通信の雰囲気を知る</title>
      <link>https://www.shutingrz.com/post/summon-real-ecu/</link>
      <pubDate>Sun, 04 Aug 2019 00:47:55 +0900</pubDate>
      
      <guid>https://www.shutingrz.com/post/summon-real-ecu/</guid>
      <description>これまでシミュレーション環境でカーセキュリティの勉強をしていて、その成果は妄想CAN三部作ということで以下の記事にまとめている。 シミュレーシ</description>
    </item>
    
    <item>
      <title>ECUの車速に関するCANメッセージを特定して騙す</title>
      <link>https://www.shutingrz.com/post/can-training3/</link>
      <pubDate>Thu, 25 Jul 2019 04:38:22 +0900</pubDate>
      
      <guid>https://www.shutingrz.com/post/can-training3/</guid>
      <description>CANの記事も3回目。引き続きシミュレーション環境のICSimでCAN通信の勉強。 前回はドア開錠メッセージをSavvyCANのOverwri</description>
    </item>
    
    <item>
      <title>ドア開錠を行うCAN通信を特定する</title>
      <link>https://www.shutingrz.com/post/can-training2/</link>
      <pubDate>Mon, 22 Jul 2019 03:37:54 +0900</pubDate>
      
      <guid>https://www.shutingrz.com/post/can-training2/</guid>
      <description>今回も引き続きシミュレーション環境のICSimでCAN通信の勉強。 前回 はどのCANメッセージがドアをあけるものなのかわからないながらも、通信</description>
    </item>
    
    <item>
      <title>シミュレーション環境でCAN通信を試す</title>
      <link>https://www.shutingrz.com/post/can-training-first/</link>
      <pubDate>Tue, 16 Jul 2019 00:02:39 +0900</pubDate>
      
      <guid>https://www.shutingrz.com/post/can-training-first/</guid>
      <description>車がなくてもカーセキュリティの勉強がしたい！ ということでカーハッカーズハンドブックを読みつつICSimを使ってCAN通信を試してみる。 環境 Ubuntu</description>
    </item>
    
    <item>
      <title>ペネトレ検証-権限昇格とWildcard Injectionの原理</title>
      <link>https://www.shutingrz.com/post/ad_hack-linux_priv_escalation/</link>
      <pubDate>Mon, 13 May 2019 03:15:21 +0900</pubDate>
      
      <guid>https://www.shutingrz.com/post/ad_hack-linux_priv_escalation/</guid>
      <description>しゅーとです。 引き続きペネトレーションテストの検証をしていきます。 前回の記事はこちら。 ペネトレ検証-ECサイトに侵入 前回はECShopの脆弱</description>
    </item>
    
    <item>
      <title>ペネトレ検証-ECサイトに侵入</title>
      <link>https://www.shutingrz.com/post/ad_hack-ec_exploit/</link>
      <pubDate>Sat, 11 May 2019 07:01:20 +0900</pubDate>
      
      <guid>https://www.shutingrz.com/post/ad_hack-ec_exploit/</guid>
      <description>しゅーとです。 家にADの検証環境を立てたので、一連のペネトレーションテストの練習をします。 また、攻撃後にブルーチーム目線で攻撃の痕跡がどう残</description>
    </item>
    
    <item>
      <title>記事に特定のタグがあったら「悪用禁止」と表示されるようにしてみた</title>
      <link>https://www.shutingrz.com/post/hugo-notice-banner/</link>
      <pubDate>Wed, 08 May 2019 02:43:52 +0900</pubDate>
      
      <guid>https://www.shutingrz.com/post/hugo-notice-banner/</guid>
      <description>要はGDPR対応用のライブラリを「悪用禁止」の意思表示に使うってだけの話です。 記事に特定のタグ(本Webサイトではethical_hacki</description>
    </item>
    
    <item>
      <title>自作仮想通貨入門(10) - 著作権表示の記載・おわりに</title>
      <link>https://www.shutingrz.com/post/oreore-coin10/</link>
      <pubDate>Mon, 29 Apr 2019 23:19:55 +0900</pubDate>
      
      <guid>https://www.shutingrz.com/post/oreore-coin10/</guid>
      <description>この章で自作仮想通貨入門は終わりです。 著作権表示をしてあなたの仮想通貨をアピールしましょう。 著作権表示の記載 著作権表示は下記のファイルに記載</description>
    </item>
    
    <item>
      <title>自作仮想通貨入門(9) - ブロックデータのマジックバイト変更</title>
      <link>https://www.shutingrz.com/post/oreore-coin9/</link>
      <pubDate>Mon, 29 Apr 2019 22:52:33 +0900</pubDate>
      
      <guid>https://www.shutingrz.com/post/oreore-coin9/</guid>
      <description>※この章では src/chainparams.cpp を変更します。 あまり話題にならないものの仮想通貨では極めて重要な、ブロックデータのマジックバイトを変更します。 ビットコインプロ</description>
    </item>
    
    <item>
      <title>自作仮想通貨入門(8) - アドレスのプレフィックス変更</title>
      <link>https://www.shutingrz.com/post/oreore-coin8/</link>
      <pubDate>Mon, 29 Apr 2019 00:45:29 +0900</pubDate>
      
      <guid>https://www.shutingrz.com/post/oreore-coin8/</guid>
      <description>※この章では src/chainparams.cpp を変更します。 仮想通貨の花形的存在、ウォレットアドレスについての説明とソースコードの変更をしていきます。 プレフィックスの仕組み</description>
    </item>
    
    <item>
      <title>自作仮想通貨入門(7) - コンセンサスの設定</title>
      <link>https://www.shutingrz.com/post/oreore-coin7/</link>
      <pubDate>Mon, 29 Apr 2019 00:17:41 +0900</pubDate>
      
      <guid>https://www.shutingrz.com/post/oreore-coin7/</guid>
      <description>※この章では src/chainparams.cpp を変更します。 ジェネシスブロックに続いて、今回はコンセンサスも決めていきます。 実はここはデフォルトのままでも問題ないのですが、</description>
    </item>
    
    <item>
      <title>自作仮想通貨入門(6) - ジェネシスブロックの作成と設定</title>
      <link>https://www.shutingrz.com/post/oreore-coin6/</link>
      <pubDate>Sun, 28 Apr 2019 23:47:48 +0900</pubDate>
      
      <guid>https://www.shutingrz.com/post/oreore-coin6/</guid>
      <description>※この章では src/chainparams.cpp を変更します。 仮想通貨はブロックチェーンの原理を基にして運用されています。 つまり、ブロックチェーンを利用するためにはブロックチ</description>
    </item>
    
    <item>
      <title>自作仮想通貨入門(5) - 単純な文字列置換</title>
      <link>https://www.shutingrz.com/post/oreore-coin5/</link>
      <pubDate>Sun, 28 Apr 2019 23:17:11 +0900</pubDate>
      
      <guid>https://www.shutingrz.com/post/oreore-coin5/</guid>
      <description>この章からいよいよLitecoinのソースコードに修正を加えていきます。 この章ではソースコードおよび関連ドキュメントに含まれるLitecoi</description>
    </item>
    
    <item>
      <title>自作仮想通貨入門(4) - テンプレートファイルのコピー</title>
      <link>https://www.shutingrz.com/post/oreore-coin4/</link>
      <pubDate>Sun, 28 Apr 2019 22:45:13 +0900</pubDate>
      
      <guid>https://www.shutingrz.com/post/oreore-coin4/</guid>
      <description>チェックポイントなどの確認処理を全て消したテンプレートファイルをコピーし新しい仮想通貨に合わせて色々な設定をしていきます。 chainparams.cpp / chainparams.h の置き換え B</description>
    </item>
    
    <item>
      <title>自作仮想通貨入門(3) - Litecoinを試してみよう</title>
      <link>https://www.shutingrz.com/post/oreore-coin3/</link>
      <pubDate>Sun, 28 Apr 2019 22:05:53 +0900</pubDate>
      
      <guid>https://www.shutingrz.com/post/oreore-coin3/</guid>
      <description>自作仮想通貨を作る前に、もととなるLitecoinでマイニングや送金を試してみます。 既にコマンドラインでマイニングや送金を行ったことがあるか</description>
    </item>
    
    <item>
      <title>自作仮想通貨入門(2) - Litecoinの準備</title>
      <link>https://www.shutingrz.com/post/oreore-coin2/</link>
      <pubDate>Sat, 27 Apr 2019 15:11:43 +0900</pubDate>
      
      <guid>https://www.shutingrz.com/post/oreore-coin2/</guid>
      <description>自作仮想通貨のもととなる、Litecoin 0.16をダウンロードしていきます。 今回は、フォークとリリースを容易に行えるように、gitを使って</description>
    </item>
    
    <item>
      <title>自作仮想通貨入門(1) - はじめに</title>
      <link>https://www.shutingrz.com/post/oreore-coin1/</link>
      <pubDate>Sat, 27 Apr 2019 14:24:31 +0900</pubDate>
      
      <guid>https://www.shutingrz.com/post/oreore-coin1/</guid>
      <description>自作仮想通貨「Raccoin」のアイコン 皆さんは自作仮想通貨を作ったことはあるでしょうか？ イーサリアムのトークンやCounterPartyも</description>
    </item>
    
    <item>
      <title>サイトをリニューアルしました</title>
      <link>https://www.shutingrz.com/post/first-article/</link>
      <pubDate>Sat, 27 Apr 2019 02:37:37 +0900</pubDate>
      
      <guid>https://www.shutingrz.com/post/first-article/</guid>
      <description>今までのポートフォリオサイトが適当すぎたのと、ブログははてなブログを使ってたので ポートフォリオ兼ブログとしてリニューアルしました。</description>
    </item>
    
  </channel>
</rss>
