<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pentest on Shooting!!!</title>
    <link>https://www.shutingrz.com/tags/pentest/</link>
    <description>Recent content in pentest on Shooting!!!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <copyright>shutingrz - All rights reserved.</copyright>
    <lastBuildDate>Mon, 20 Nov 2023 04:00:00 +0900</lastBuildDate>
    <atom:link href="https://www.shutingrz.com/tags/pentest/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>温度センサーを起点にスマートロックを不正開錠してみた～ZigBeeデバイスに対する攻撃手法～</title>
      <link>https://www.shutingrz.com/post/zigbee-hacking-unlock-door/</link>
      <pubDate>Mon, 20 Nov 2023 04:00:00 +0900</pubDate>
      <guid>https://www.shutingrz.com/post/zigbee-hacking-unlock-door/</guid>
      <description>要約: ZigBeeネットワークに間接的に接続されたスマートロックを不正開錠できた。格安センサーとZigBeeネットワークの組み合わせは危険。この記事では1つのセキュリティの綻びから、スマートロックが不正開錠されるまでの流れを解説する。 はじめに しゅーとです。もはやブームが去ったであろうZigBeeに最近初めて触れたので、今更ながら投稿します。 みなさんのご家庭はスマートホーム化していますか？最近はスイ</description>
    </item>
    <item>
      <title>フォールトインジェクションとは？電圧グリッチでnRF52のプロテクションを破って学ぶ</title>
      <link>https://www.shutingrz.com/post/voltage-fault-injection-nrf52/</link>
      <pubDate>Mon, 07 Mar 2022 03:00:00 +0900</pubDate>
      <guid>https://www.shutingrz.com/post/voltage-fault-injection-nrf52/</guid>
      <description>しゅーと(@shutingrz)です。久しぶりの投稿です。 皆さんはフォールトインジェクション(Fault Injection)という言葉を聞いたことがありますか？ハードウェアセキュリティ分野におけるフォールトインジェクションはサイドチャネル攻撃手法のひとつです。今までこの攻撃を試すには高価な機材が必要でハードルが高いものでした。しかし2020年にnRF52という世界中で使われるマイコンにおいてフォー</description>
    </item>
    <item>
      <title>検知回避の手法 - PowerShell</title>
      <link>https://www.shutingrz.com/post/avoid-detection-powershell/</link>
      <pubDate>Sat, 10 Apr 2021 00:00:00 +0900</pubDate>
      <guid>https://www.shutingrz.com/post/avoid-detection-powershell/</guid>
      <description>しゅーと(@shutingrz)です。 前回の記事では実行ファイルにおいて Windows Defender のリアルタイムスキャン、クラウド保護の検知回避を試みました。 まだ読んでない方はぜひ読んでください。 検知回避の手法 - 実行ファイル AMSIの概念については前回の記事に記載しており、本記事では説明を省略しています。 今回はスクリプトの検知回避に挑戦し、Windows Defender のリアルタイムスキャン・クラウド保護がオンの状態で、PowerS</description>
    </item>
    <item>
      <title>検知回避の手法 - 実行ファイル</title>
      <link>https://www.shutingrz.com/post/avoid-detection-dotnet/</link>
      <pubDate>Thu, 08 Apr 2021 00:00:07 +0900</pubDate>
      <guid>https://www.shutingrz.com/post/avoid-detection-dotnet/</guid>
      <description>しゅーとです。今回は実行ファイル、特に.NETプログラムの検知回避に関する記事です。 ペネトレーションテストに携わりたい方だけではなく、Blue Teamの方もアンチウイルスソフト単体の限界を知る意味で有用と思います。 .NETプログラムの例として、セットアップが簡単なC2フレームワークである、Covenant の検知回避をゴールに説明します。 エージェントであるCovenant Gruntは.NETプログラ</description>
    </item>
    <item>
      <title>GadgetToJScript を利用した Office VBA のAMSI バイパスと原理</title>
      <link>https://www.shutingrz.com/post/explore-dotnet-serialize-g2js/</link>
      <pubDate>Mon, 16 Nov 2020 18:41:10 +0900</pubDate>
      <guid>https://www.shutingrz.com/post/explore-dotnet-serialize-g2js/</guid>
      <description>しゅーとです。普段は IoT 機器のリバースエンジニアリングを生業としていますが、最近は流行に乗ってRed Teaming の研究もしています。 今回は WSH (vbs, js, hta) と Office マクロ事情を追ってみました。 WSH (Windows Script Host) は Windows に搭載されているスクリプトエンジンで、VBScript と JScript を実行できます。 Office マクロで動作する機能・言語は様々ありますが、一般的なのは VBA (Visual Basic for Application) です。WSH、特に VBScript と VBA は構文はほとんど同じですが、実行環境は割と違っていたりし</description>
    </item>
    <item>
      <title>ラテラルムーブメントとそれを阻むUACに関する調査</title>
      <link>https://www.shutingrz.com/post/ad_remote-uac/</link>
      <pubDate>Mon, 24 Feb 2020 01:18:40 +0900</pubDate>
      <guid>https://www.shutingrz.com/post/ad_remote-uac/</guid>
      <description>ラテラルムーブメントを阻む、通称「リモートUAC」に関して調査しました。 結果はまあそうだよねという感じになってしまいましたが、ここにメモします。 UACの効果 UAC といえば、管理者権限で実行するときに暗転して表示されるポップアップを連想されると思います。 しかしUACには、管理共有やWMIなどの機能をリモートから防ぐためのリモート UAC という機能もあります。 例えば組織内でセットアップ用のローカル管理者ユーザが</description>
    </item>
    <item>
      <title>ペネトレ検証-権限昇格とWildcard Injectionの原理</title>
      <link>https://www.shutingrz.com/post/ad_hack-linux_priv_escalation/</link>
      <pubDate>Mon, 13 May 2019 03:15:21 +0900</pubDate>
      <guid>https://www.shutingrz.com/post/ad_hack-linux_priv_escalation/</guid>
      <description>しゅーとです。 引き続きペネトレーションテストの検証をしていきます。 前回の記事はこちら。 ペネトレ検証-ECサイトに侵入 前回はECShopの脆弱性を用いてRCE、そしてwww-data権限でのバックドア作成に成功しました。 今回はLinuxでの権限昇格です。 権限昇格したい！ 現状コントロールできているのはwww-dataユーザの権限であり、rootではありません。 ここから横展開するにあたり、root権限は</description>
    </item>
    <item>
      <title>ペネトレ検証-ECサイトに侵入</title>
      <link>https://www.shutingrz.com/post/ad_hack-ec_exploit/</link>
      <pubDate>Sat, 11 May 2019 07:01:20 +0900</pubDate>
      <guid>https://www.shutingrz.com/post/ad_hack-ec_exploit/</guid>
      <description>しゅーとです。 家にADの検証環境を立てたので、一連のペネトレーションテストの練習をします。 また、攻撃後にブルーチーム目線で攻撃の痕跡がどう残っているかも確認します。 今回は初期侵入フェーズとしてECサイトへの侵入です。 エクスプロイトとバックドアの作成をやっていきます。 なお今回はIDSとして申し訳程度にSuricataを立てていますが、デフォルトのポリシーだし正直検知できるとは思っていません。 自作自演</description>
    </item>
  </channel>
</rss>
