<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bypass on Shooting!!!</title>
    <link>https://www.shutingrz.com/tags/bypass/</link>
    <description>Recent content in bypass on Shooting!!!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <copyright>shutingrz - All rights reserved.</copyright>
    <lastBuildDate>Sat, 10 Apr 2021 00:00:00 +0900</lastBuildDate><atom:link href="https://www.shutingrz.com/tags/bypass/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>検知回避の手法 - PowerShell</title>
      <link>https://www.shutingrz.com/post/avoid-detection-powershell/</link>
      <pubDate>Sat, 10 Apr 2021 00:00:00 +0900</pubDate>
      
      <guid>https://www.shutingrz.com/post/avoid-detection-powershell/</guid>
      <description>しゅーと(@shutingrz)です。 前回の記事では実行ファイルにおいて Windows Defender のリアルタイムスキャン、クラウド保護の検知回避を試みました。 まだ読んでない方はぜひ読んでください。 検知回避の手法 - 実行ファイル AMSIの概念については前回の記事に記載しており、本記事では説明を省略しています。 今回はスクリプトの検知回避に挑戦し、Windows Defender のリアルタイムスキャン・クラウド保護がオンの状態で、PowerS</description>
    </item>
    
    <item>
      <title>検知回避の手法 - 実行ファイル</title>
      <link>https://www.shutingrz.com/post/avoid-detection-dotnet/</link>
      <pubDate>Thu, 08 Apr 2021 00:00:07 +0900</pubDate>
      
      <guid>https://www.shutingrz.com/post/avoid-detection-dotnet/</guid>
      <description>しゅーとです。今回は実行ファイル、特に.NETプログラムの検知回避に関する記事です。 ペネトレーションテストに携わりたい方だけではなく、Blue Teamの方もアンチウイルスソフト単体の限界を知る意味で有用と思います。 .NETプログラムの例として、セットアップが簡単なC2フレームワークである、Covenant の検知回避をゴールに説明します。 エージェントであるCovenant Gruntは.NETプログラ</description>
    </item>
    
    <item>
      <title>GadgetToJScript を利用した Office VBA のAMSI バイパスと原理</title>
      <link>https://www.shutingrz.com/post/explore-dotnet-serialize-g2js/</link>
      <pubDate>Mon, 16 Nov 2020 18:41:10 +0900</pubDate>
      
      <guid>https://www.shutingrz.com/post/explore-dotnet-serialize-g2js/</guid>
      <description>しゅーとです。普段は IoT 機器のリバースエンジニアリングを生業としていますが、最近は流行に乗ってRed Teaming の研究もしています。 今回は WSH (vbs, js, hta) と Office マクロ事情を追ってみました。 WSH (Windows Script Host) は Windows に搭載されているスクリプトエンジンで、VBScript と JScript を実行できます。 Office マクロで動作する機能・言語は様々ありますが、一般的なのは VBA (Visual Basic for Application) です。WSH、特に VBScript と VBA は構文はほとんど同じですが、実行環境は割と違っていたりし</description>
    </item>
    
  </channel>
</rss>
